\documentclass[11pt,xetex,xcolor=pdftex,dvipsnames,table,t]{beamer}

%%%% OVERLAY for uncovers
% \begin{itemize}[<+->]
% \begin{itemize}[<+-| alert@+>]

\usetheme[compress]{Boadilla}
\usecolortheme[named=OliveGreen]{structure}
\usefonttheme{professionalfonts}
%\usepackage[slides,textosf,mathlf,amsbb,minionint,footnotefigures]{MinionPro}
\usepackage{arev}
\usepackage[no-math]{fontspec}
\usepackage{xltxtra}

\defaultfontfeatures{Mapping=tex-text}
\setsansfont[BoldFont=Myriad Pro Semibold]{Myriad Pro}
\setbeamerfont{frametitle}{family={\fontsize{14}{12}\fontspec{Myriad Pro Bold Condensed}} }
\setbeamercolor{frametitle}{fg=MidnightBlue}

\setbeamerfont{title}{family=\fontspec{Diavlo}}
\setbeamerfont{minionreg}{family*={MinionPro-OsF}}
\setbeamerfont{abstract}{family*={MinionPro-OsF}}
%\setbeamerfont{caption}{family={\fontspec{PrioriSanBoldSC}}}
\setbeamercolor{caption}{fg=MidnightBlue}
\setbeamertemplate{caption}{\insertcaption}
  
\usepackage{dcolumn}
\usepackage[english]{babel}
\usepackage{pgf,pgfnodes,pgfautomata,pgfheaps}
%\usepackage{amsmath,amssymb}
%\usepackage[latin1]{inputenc}
\setbeamercovered{dynamic}

% converts LaTeX specials (``quotes'' --- dashes etc.) to unicode
\defaultfontfeatures{Ligatures={Common}, Mapping={tex-text}} 
\setromanfont [BoldFont={* Bold}, ItalicFont={* Italic}]{Minion Pro}
%\setromanfont [Mapping=tex-text,Ligatures={Common},BoldFont={ElectraLH-Bold},ItalicFont={ElectraLH-CursiveOsF},BoldItalicFont={ElectraLH-BoldCursiveOsF},SmallCapsFont={ElectraLH-RegularSC}]{ElectraLH-RegularOsF}
\setsansfont[Mapping=tex-text,BoldFont={Delicious-Bold},ItalicFont={Delicious-Italic},SmallCapsFont={Delicious-SmallCaps}] {Delicious-Roman}
\setmonofont[Scale=0.8]{Monaco} 
%\usepackage[final,expansion=true,protrusion=true,spacing=true,kerning=true]{microtype}


%\logo{\pgfuseimage{logo}}
\title[]{}
\subtitle{}
 \institute[]{CU}
\author{Michael Malecki}
\date{}

%\AtBeginSection[]{\frame{\frametitle{Outline}\tableofcontents[hideothersubsections]}}
\usepackage{Sweave}
\begin{document}
\SweaveOpts{keep.source=TRUE}

<<mainsetup,echo=false,results=hide>>=
library(xtable)
library(MRP)
library(apsrtable)
options(width=60,prompt="R> ",continue="   ")
load("/Users/malecki/mrp/malecki/fitted.Rdata")
M.full <- mrp.statelevel; rm(mrp.statelevel)
@ 

\begin{frame}
  \frametitle{\texttt{mrp} objects}
  Let $J$ be the expanded dimension of all cross-classifying categories 
  (e.g., $S_{\mathrm{states}}\times I_{\mathrm{inc}}\times E_{\mathrm{edu}}$)
  \begin{description}
  \item[poll] array: $J\times 3$: Cell design effect, $\bar{Y}_w$, $N_{\mathrm{eff}}$
  \item[data] data.frame: flattened \texttt{poll} with quasibinomial `response.yes, response.no' and predictors
  \item[population] array: $J$ (possibly minus a stratum in \texttt{poll}, such as poll effect for combining polls)
  \item[multilevel.model] fitted \texttt{mer} model
  \end{description}
\end{frame}

\begin{frame}
  \frametitle{Example data}
  \texttt{data(samesexmarriage)} loads `marriage.data' and `Statelevel'. Other data in package:
  \begin{description}
  \item[mrp.census] Census data with main data columns `weighted2000', `weighted2004', and `weighted2008'. 
  \item[mrp.regions] A data.frame with state two-letter abbreviations and five census region codes, with DC as its own region.
  \item[spmap.states] A projected map object with state names, \textsc{fips} codes, and two-letter state abbreviations.
  \end{description}
\end{frame}

\begin{frame}
  \frametitle{The mrp() function}
  \begin{enumerate}
  \item “Formula” interface to describe the cross-classifying factors
  \item Consistency between $J$-dimensioned arrays to 2-dimenional representation with factors preserving category names and orderings
  \item Poll and population arrays match dims
  \item Easy transformations and left-joins
  \end{enumerate}
\end{frame}

\begin{frame}[fragile]
  \frametitle{Full example call}
<<fullmodelcall,eval=FALSE>>=
M.full <- mrp(yes.of.all~
              state + f.race + age + edu + poll,
              poll=marriage.data,
              population=mrp.census,use="weighted2008",
              population.formula=.~.-poll,
              add=list(Statelevel,
                mrp.regions,
                expression(age.edu <- interaction(age,edu)),
                expression(z.age <- rescale(age))),
              mr.formula= .~. + (1|region) + (1|age.edu)+
              z.age + p.relig.full + p.kerry.full
              )
@ 
\end{frame}

\begin{frame}
  \frametitle{\texttt{mr} and \texttt{poststratify} methods}
  \begin{description}
  \item[mr] calls \texttt{glmer} with the 2-col response -- easy to replace \texttt{mr,mrp-method} with \texttt{bglmer} call or something else.
  \item[poststratify] multiplies \texttt{fitted(multilevel.model)} by population vector, returns array.\footnote{Does not do logit-shift for turnout yet.} \textbf{Whatever we write should have a \texttt{fitted()} extractor.}
  \end{description}
\end{frame}

\begin{frame}[fragile]
  \frametitle{poststratify}
\begin{verbatim}
R> xtable(poststratify(M.full, ~ edu+age)
       *100, digits=0)
\end{verbatim}
  \begin{table}
    \centering
    \caption{}
    \label{tab:table-simplemodel}
<<simple-model-table,results=tex,echo=FALSE>>=
print(xtable(100*
             poststratify(M.full, ~ edu + age),
             digits=0),floating=FALSE)
@ 
\end{table}
\end{frame}

\begin{frame}
  \frametitle{Maps}
  
  Same formula interface, where geographic unit is on the left side, strata on the right.
  
  \begin{figure}[htb]
    \centering

\setkeys{Gin}{width=\linewidth}
<<map, fig=TRUE,echo=FALSE,width=8,height=4,resolution=144,png=TRUE,pdf=FALSE>>=
print(
      spplot(M.full, state ~ edu+age,
             subset=TRUE,
             spmap.states, "STATE", exclude=c("AK","DC","HI"),
             stroke=list(expression(hasmarriage2010==TRUE),
               "CA"),
             center=poststratify(M.full), cuts=50,
             sub=paste("National average:",
               format(poststratify(M.full),digits=2)),
                   add.settings=list(
                     regions=list(col=fBasics:::divPalette(51,"BrBG")),
                     superpose.line=list(col=c("#00000055","#00000044"),lwd=c(.3,1.3))
                     ),
             colorkey=list(
               space="bottom",height=.5,width=.5,
               labels=list(at=c(.04,.34,.64),
                 labels=c("-30%","|","+30%"), cex=.7)
               )
             )
      )
@     
\end{figure}
\end{frame}

\begin{frame}[fragile]
  \frametitle{spplot map code}
<<finalmapcode,eval=FALSE>>=
print(spplot(M.full, state ~ edu+age,
                subset=TRUE,
                spmap.states, "STATE", exclude=c("AK","DC","HI"),
                stroke=list(
                  expression(hasmarriage2010==TRUE),
                  "CA"),
                center=poststratify(M.full), cuts=50,
                sub=paste("National average:",
                  format(poststratify(M.full),digits=2)),
                add.settings=list(
                  regions=list(col=fBasics:::divPalette(51,"BrBG")),
                  superpose.line=list(col=c("#00000055","#00000044"),
                  lwd=c(.3,1.3))),
                  colorkey=list(
                  space="bottom",height=.5,width=.5,
                  labels=list(at=c(.04,.34,.64),
                  labels=c("-30%","|","+30%"), cex=.7)
                  )))
@ 
\end{frame}

\end{document}


\maketitle
\thispagestyle{empty} % No page number first page

%%% Preserve comments and spacing of echo'd R
%%% (ESS is better than R at indenting!)
\SweaveOpts{keep.source=TRUE}
%%% Place whatever libraries you want in mainsetup 

\section{Running Example}
\label{sec:running-example}

\raggedright
\setlength{\parindent}{1em}

The running example is the same combined poll data and model in Kastellec's \href{http://www.princeton.edu/~jkastell/mrp_primer.html}{MRP Primer}, dealing with support for same-sex marriage in 2004--2005. A simple model using only a few group-level intercepts, is run and subject to \texttt{R CMD check}; in the “not run” section of the examples, code for the complete model with census poststratification, individual- and state-level predictors, and categorical interactions is shown. This vignette walks through both of those examples.

\subsection{Data}
\label{sec:data}



\section{Fitting a basic model}
\label{sec:fitting-basic-model}

\subsection{Preparing the data}
\label{sec:preparing-data}

Almost all data will involve recoding and careful checking of categories. In particular, we rely heavily on R's “factor” data type. Factors have associated “levels” (names for categories) and may be ordered. For MRP, categorical variables need to be factors and the levels need to match between the survey data and the poststratification (census) data.

<<prepare-data>>=
marriage.data <- within(marriage.data, {
    state <- factor(state,exclude=NA)
    poll <- factor(poll,exclude=NA)
    age <- factor(age.cat,exclude=NA,
                  labels=c("18-29","30-44","45-64","65+"))
    edu <- factor(edu.cat,exclude=NA,labels=c("< High School",
                                       "High School",
                                       "Some College",
                                       "Graduated College"))
    ## Code interaction here, first fixing levels
    female <- factor(female,levels=c(0,1),
                     labels=c("Male","Female"))
    race.wbh <- factor(race.wbh)
    levels(race.wbh) <- c("White","Black","Hispanic")
    f.race <- interaction(female,race.wbh)
  })
  ## Remove empty "" state and drop it from levels.
  marriage.data <- subset(marriage.data,!is.na(state) & state!="" )
  marriage.data$state <- factor(marriage.data$state)
@ 

In this case, the poll data we have uses four instead of five categories for education. Below, we combine the top two levels of census education into a survey-matching single “Graduated College” level. We also drop any states from the census that are not in our survey dataset.

<<prepare-census>>=
  mrp.census <- na.omit(mrp.census[mrp.census$state %in% marriage.data$state,])

  mrp.census <- within(mrp.census,{
    age <- factor(age,exclude=NA,labels=c("18-29","30-44","45-64","65+"))
    education[education=="postgraduate"] <- "college graduate"
    edu <- factor(education,exclude=NA,labels=c("< High School",
                                         "High School",
                                         "Some College",
                                         "Graduated College"))
    state <- factor(state,exclude=NA)
    race[race=="Other"] <- NA
    race <- factor(race,exclude=NA)
    f.race <- interaction(sex,race)
  })
  mrp.census <- na.omit(mrp.census)
@ 


\section{The Full Model}
\label{sec:full-model}

In this section we demonstrate the use of the high-level arguments to \texttt{mrp()} for fitting more complex models with more data including intercepts strata not present in the population, additional group-level predictors, and transformations in the data.

The full model includes intercepts for poll (the data combine several polls), for region (states are grouped into regions), state-level predictors such as religious attendance and democratic vote share in previous elections, and interactions between the cross-classifying strata. The interface to supply or create this data and modify the regression formula are intuitive to use.

\subsection{Modifying Population Strata}
\label{sec:modify-popul-strata}

We would like to separate the estimation data by poll, but obviously the population data are the same across polls. To remove a stratification dimension, subtract it from the initial formula by adding this argument:
<<eval=FALSE>>=
population.formula= . ~ . - poll
@ 

\subsection{Joining Predictors and Transforming Data}
\label{sec:join-pred-transf}

the \texttt{add} argument is a powerful way to add predictors by left-joining (“merging”) other data.frames onto the prepared flattened cross-classified data. In this case we have state-level predictors -- a few that are used in the analysis and several others; and a set that are used only in the display -- but they are simple to join on matching keys in same-named columns. The \texttt{Statelevel} data.frame has a column `state' with factor levels matching those in the prepared data. 

Two common transformations are used in the data for this example: making a continuous group-level predictor out of the categorical one by rescaling it, and making an additional categorical variable by the interaction of other ones that are already included as cross-classifying strata.

Both types of additional data are provided in a \texttt{list}:
<<eval=FALSE>>=
add=list(
  Statelevel,
  Regions,
  expression(z.age <- rescale(age)),
  expression(age.edu <- interaction(age,edu)))
@ 

\subsection{Specifying the Multilevel Regression Formula}
\label{sec:spec-mult-regr}

Finally, we need to adjust the multilevel regression formula. By default, \emph{MRP} will build a simple model for only intercepts by each stratum indicated in the main formula. We want to include all of those, but also the state-level predictors and possibly varying slopes in some of them as well. Again we use the dot to indicate what has already been included.

<<eval=FALSE>>=
mr.formula= .~.+ (1|region) + (1|age.edu) + z.age + p.relig.full + p.kerry.full
@ 

\subsection{Re-fitting with existing data}
\label{sec:re-fitting-with}

The same updating of the formula is used in the event that you want to re-run or extend an existing analysis and modify its formula using the \texttt{mr()} method.

\subsection{Full Model \texttt{mrp()} Call}
\label{sec:full-model-call}

<<fullmodelcall,eval=FALSE>>=
mrp.statelevel <- mrp(yes.of.all~
                      state+f.race+age+edu+poll,
                      poll=marriage.data,
                      population=mrp.census,use="weighted2008",
                      population.formula=.~.-poll,
                      add=list(Statelevel,
                        mrp.regions,
                        expression(age.edu <- interaction(age,edu)),
                        expression(z.age <- rescale(age))),
                      mr.formula=.~.+(1|region)+ (1|age.edu)+
                       z.age+p.relig.full+p.kerry.full
                      )
@ 

\section{Advanced Plotting with \texttt{spplot}}
\label{sec:advanc-plott-with}

The \texttt{spplot,mrp-method} uses all parts of the fitted \texttt{mrp} object to produce beautiful plots with meaningful labels with the familiar fomula interface, intelligent subsetting, easy customization, and the addition of other information to the plot by selectively modifying the stroke on a list of features. 

The \texttt{spplot} method takes an \texttt{mrp} object and a stratification specification, and merges it onto a map from the SpatialPolygonsDataFrame class, provided by the \emph{sp} package. Using \emph{maptools}, users can read in their own ESRI shapefiles. Shapefiles are somewhat of a standard for GIS applications. As mentioned in the data section above, we have included a map read into R from a publicly available shapefile. According to Wickham, \emph{sp} maps can be used with \emph{ggplot2} via \texttt{fortify} methods; we plan to make poststratified results more accessible to \emph{ggplot2} methods in the future. 

\subsection{Conditioning Panels}
\label{sec:conditioning-panels}

The \texttt{formula} argument to our \texttt{spplot} method takes a similar form to the overall \texttt{mrp} formula specifying the different cross-classifying strata desired on the plot. The left-hand side indicates the variable name in the data that corresponds to a variable name in the map. In the example, the data has two-letter US state abbreviations in a variable called `state' and the included map has the same data in the variable `\textsc{state}' (the function default). Right-hand-side conditioning variables in the formula form the rows and columns of a faceted “trellis” or “small multiples” display.

The `exclude' argument suppresses plotting of certain geographic units by removing them from the map data; the same effect can be achieved with `subset', except `subset' applies to all variables not just the geographic one. In this way we could focus on just a subset of respondents, for example:

<<subset-exclude,eval=FALSE>>=
exclude=c("AK","HI")
subset=(age=="18-29")
@ 

It is occasionally useful to indicate the presence or absence of a condition for certain geographic units. In our example, we change the stroke of the states that allow same-sex couples legal marriage. The `stroke' argument provides a flexible method of doing this. Indeed, several different conditions can be drawn with different stroke attributes (`lty', `lwd', and `col'). The list can contain subscript vectors or expressions. Each element of the list is evaluated in the context of the full two-dimensional cross-classified data (that is, the `data' slot of the \texttt{mrp} object. This context makes it easy to use state-level data already included via the `add' argument.

We use this to specify a thin black line around states with legal marriage, and a slightly thicker but semi-transparent stroke around California, where legal marriage was on, off, stayed, unstayed, appealed, and stayed again. The stroke argument takes this form:

<<strokelist,eval=FALSE>>=
stroke=list(
  expression(hasmarriage2010==TRUE),
  "CA")
@ 

\subsection{Centering or otherwise Shifting the Scale}
\label{sec:color-scale}

The \texttt{spplot} methods eventually call \texttt{levelplot} which maps values into colors along a range. These colors are called `regions' in \emph{lattice} parlance and the number and location of cut points between them can be specified explicitly or calculated from the range of the data. It may be desirable to show values as offsets, for example, from a national poststratified average. Recentering the scale provides an easy way to do that with MRP results:

<<recenter,eval=FALSE>>=
center=poststratify(mrp.statelevel)
@ 

The default number of `cuts' in the data is 63, and the default range of colors is a 64-valued heatmap. There are a lot of color palettes out there, and they may emphasize different aspects of the data. A \href{http://www.personal.psu.edu/cab38/}{popular set} are designed by Cynthia Brewer in the \emph{RColorBrewer} package. However, the Brewer Palettes offer at most 11 categories.\footnote{When specifying a vector of colors for `regions' especially when it is a small number, note that the default \texttt{mrp} number of cuts is 63; that is, you will always have to specify one fewer cuts than the number of colors provided.} The in-between ranges can be interpolated, and a continuous version of Brewer palettes is available in the \emph{fBasics} package. We use an \emph{fBasics} version of a Brewer “diverging” palette below.

\subsection{The \texttt{add.settings} list}
\label{sec:add.settings-list}

Much of the flexibility of \emph{lattice} comes from themes or lists of \texttt{trellis.par.settings}. \emph{MRP} includes a theme with some of the values already discussed (the 64-valued range of colors for the regions; the thin-black stroke as the first value of `superpose.line'). In addition, several other settings are worth mentioning. 

\begin{description}
\item[add.line] The lines drawn around all the other features that are not selected in the `stroke' list. The default is a 0-width 20\% gray line.
\item[reference.line] In general reference lines are not drawn on maps (latitude and longitude lines can be drawn but should follow the projection specifications given in the documentation for \texttt{spmap.states}. We have appropriated the \texttt{reference.line\$col} for the color used for NA-valued results. For example, state-by-age-by-income groups for which there is simply not enough data to make a poststratified prediction. The default is a neutral 68\% opaque black.
\item[add.text] Text settings for the labels for conditioning rows and columns. These are taken from the names of factor levels in the data. The defaults are smaller (\texttt{cex=0.7}) and italic. Depending on graphics devices and registered fonts, the `font' and `fontface' can also be specified here.
\item[layout.\{width|height\}] By default \texttt{spplot,mrp-method} will place left and top strip titles for the entire row and entire column, rather than on each map panel. This is achieved by providing 0s here for every panel in the order drawn except for those lying at the top or left. 
\end{description}

\subsection{The Color Key}
\label{sec:color-key}

The `colorkey' is a list passed down to \texttt{levelplot}. The defaults are not bad, but in the case where values are recentered (and computed symmetric about the center) there are often easy changes that need to be made to the colorkey. Our \texttt{spplot} leaves all of these up to the user.

\section{The Final Map}
\label{sec:final-map}

<<finalmapcode,eval=FALSE>>=
print(spplot(mrp.statelevel, state ~ edu+age,
                   subset=TRUE,
                   spmap.states, "STATE", exclude=c("AK","DC","HI"),
                   stroke=list(expression(hasmarriage2010==TRUE),
                     "CA"),
                   center=poststratify(mrp.statelevel), cuts=50,
                   sub=paste("National average:",
                     format(poststratify(mrp.statelevel),digits=2)),
                   add.settings=list(
                     regions=list(col=fBasics:::divPalette(51,"BrBG")),
                     superpose.line=list(col=c("black","#00000066"),lwd=c(.3,1.3))
                     ),
                   colorkey=list(
                     space="bottom",height=.5,width=.5,
                     labels=list(at=c(.04,.34,.64),
                       labels=c("-30%","|","+30%"), cex=.7)
                     )
                   ))
@ 

\begin{figure}[b]
  \centering
  \caption{The final map shows support for same-sex marriage by age cohort and level of education, centered around the national poststratified average of 34\%.}
  \label{fig:finalmap}
\setkeys{Gin}{width=\linewidth}
<<finalmap,eval=FALSE,fig=TRUE,pdf=FALSE,png=TRUE,eps=FALSE,width=6.5,height=6.5,echo=FALSE,resolution=144>>=
<<finalmapcode>>
@   
\end{figure}

\end{document}

Need from Yair the corrected poststratification array. 

Need to figure out how to correct for voter surveys / exity poll to precinct-turnout at the level of the poll. 
